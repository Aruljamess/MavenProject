<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="reports.TestExtentReport" duration-ms="77086" started-at="2020-05-08T21:06:45Z" finished-at="2020-05-08T21:08:02Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="77086" started-at="2020-05-08T21:06:45Z" finished-at="2020-05-08T21:08:02Z">
      <class name="reports.TestExtentReport">
        <test-method status="PASS" signature="setup()[pri:0, instance:reports.TestExtentReport@42b0a6]" name="setup" is-config="true" duration-ms="540" started-at="2020-05-08T23:06:44Z" finished-at="2020-05-08T23:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:reports.TestExtentReport@42b0a6]" name="beforeTest" is-config="true" duration-ms="57950" started-at="2020-05-08T23:06:45Z" finished-at="2020-05-08T23:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="loginTestFail()[pri:0, instance:reports.TestExtentReport@42b0a6]" name="loginTestFail" duration-ms="15735" started-at="2020-05-08T23:07:43Z" finished-at="2020-05-08T23:07:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at reports.TestExtentReport.loginTestFail(TestExtentReport.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestFail -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:reports.TestExtentReport@42b0a6]" name="tearDown" is-config="true" duration-ms="1125" started-at="2020-05-08T23:07:59Z" finished-at="2020-05-08T23:08:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestFail status=FAILURE method=TestExtentReport.loginTestFail()[pri:0, instance:reports.TestExtentReport@42b0a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="loginTestPass()[pri:0, instance:reports.TestExtentReport@42b0a6]" name="loginTestPass" duration-ms="1448" started-at="2020-05-08T23:08:00Z" finished-at="2020-05-08T23:08:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestPass -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:reports.TestExtentReport@42b0a6]" name="tearDown" is-config="true" duration-ms="542" started-at="2020-05-08T23:08:01Z" finished-at="2020-05-08T23:08:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestPass status=SUCCESS method=TestExtentReport.loginTestPass()[pri:0, instance:reports.TestExtentReport@42b0a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:reports.TestExtentReport@42b0a6]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-05-08T23:08:02Z" finished-at="2020-05-08T23:08:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:reports.TestExtentReport@42b0a6]" name="tearDown" is-config="true" duration-ms="3537" started-at="2020-05-08T23:08:02Z" finished-at="2020-05-08T23:08:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- reports.TestExtentReport -->
    </test> <!-- Command line test -->
  </suite> <!-- reports.TestExtentReport -->
</testng-results>
